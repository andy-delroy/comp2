Domino Path
Time limit: 1500 ms
Memory limit: 256 MB

Almost everyone is familiar with dominoes — tiles of size 1×21×2 with two values, one on each half. In this problem, we represent each domino as a pair (x,y)(x,y) where 1≤x<y≤71≤x<y≤7.

Two dominoes can be connected if they share a common number. They are joined through that number, leaving the other two ends free.

For example, consider dominoes (1,3)(1,3) and (2,3)(2,3). They can be connected through the number 33, resulting in a sequence with free ends 11 and 22. Then, you could connect domino (2,5)(2,5) to the end with 22, and so on.

You are given a set of dominoes and must determine how many of its non-empty subsets hold the following condition:

    It is possible to arrange all of the dominoes in the subset to form a single continuous chain, where each adjacent pair of dominoes shares a common value. 

However, your task does not end there — you will need to answer this question for multiple test cases.

Standard input

The first line of input contains an integer TT, the number of test cases.

The following lines describe TT test cases:

The first line of each test case contains an integer MM, the number of dominoes in the set.

The following MM lines contain two integers xixi​ and yiyi​, the values of each half of the domino.
Standard output

For each test case, print a single line, the number of subsets of the corresponding set that can form a single continuous chain.
Constraints and notes

    1≤T≤5×1041≤T≤5×104.
    1≤xi<yi≤71≤xi​<yi​≤7, for all valid ii.
    The sum of all MM across the test cases doesn't exceed 5×1055×105. 

Input	Output

3
4
1 2
1 3
2 3
3 4
3
1 2
2 3
2 4
3
1 2
2 3
3 4

	

13
6
6

